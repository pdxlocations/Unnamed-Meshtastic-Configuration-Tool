#field_name, "Human readable field name", "helptext"
[User Config]
title, "User"
long_name, "Node long name", "If you are a licensed HAM operator and have enabled HAM mode, this must be set to your HAM operator call sign"
short_name, "Node short name", "Must be up to 4 bytes.\nnUsually this is 4 characters, if using latin characters and no emojis."
is_licensed, "Enable licensed amateur (HAM) mode", "IMPORTANT: Read Meshtastic help documentation before enabling."

[Channel Config]
title, "Channels"
channel_num, "Channel number", "The index number of this channel."
psk, "PSK", "The channel's encryption key."
name, "Name", "The channel's name."
id, "", ""
uplink_enabled, "Uplink enabled", "Let this channel's data be sent to the MQTT server configured on this node."
downlink_enabled, "Downlink enabled", "Let data from the MQTT server configured on this node be sent to this channel."
module_settings.position_precision, "Position precision", "The precision level of location data sent on this channel."
module_settings.is_client_muted, "", ""


[config.device]
title, "Device"
role, "Role", "For the vast majority of users, the correct choice is CLIENT. For more information, visit https://meshtastic.org/blog/choosing-the-right-device-role/"
serial_enabled, "Enable serial console", ""
button_gpio, "Button GPIO", "GPIO pin for user button"
buzzer_gpio, "Buzzer GPIO", "GPIO pin for user buzzer"
rebroadcast_mode, "Rebroadcast mode", "This setting defines the device's behavior for how messages are rebroadcasted."
node_info_broadcast_secs, "Nodeinfo broadcast interval", "This is the number of seconds between NodeInfo message broadcasts. Femtofox will still send nodeinfo in response to new nodes on the mesh."
double_tap_as_button_press, "Double Tap as Button Press", "This option will enable a double tap, when a supported accelerometer is attached to the device, to be treated as a button press."
is_managed, "Enable managed mode", "Enabling Managed Mode blocks client applications from writing configurations to a radio(they may be read). Once enabled, radio configurations can only be changed via remote ode administration, this menu or CLI. \Z4This setting is not required for remote node administration.\033[0m\n\n\Before enabling Managed Mode, verify that the node can be controlled via Remote Admin or legacy Admin channel, and that all functions are working properly to \033[31mprevent being locked out.\033[0m"
disable_triple_click, "Disable the triple click action on button", ""
tzdef, "Timezone", "Uses the TZ Database format to display the correct local time on the device display and in its logs."
led_heartbeat_disabled, "LED heartbeat disabled", "On certain hardware models, this disables the blinking heartbeat LED."

[config.position]
title, "Position"
position_broadcast_secs, "Position broadcast interval", "If smart broadcast is off we should send our position this often."
position_broadcast_smart_enabled, "Smart position broadcast enabled", "Smart broadcast will send out your position at an increased frequency only if your location has changed enough for a position update to be useful."
fixed_position, "Fixed position", "If set, this node is at a fixed position. The device will generate GPS updates at the regular GPS update interval, but use whatever the last lat/lon/alt it saved for the node. The lat/lon/alt can be set by an internal GPS or with the help of the mobile device's GPS."
gps_enabled, "GPS enabled", ""
gps_update_interval, "GPS update interval", "How often we should try to get GPS position (in seconds), or zero for the default of once every 2 minutes, or a very large value (maxint) to update only once at boot."
gps_attempt_time, "GPS attempt time", ""
position_flags, "Position flags", "See Meshtastic docs for more information."
rx_gpio, "GPS RX GPIO pin", "If your device does not have a fixed GPS chip, you can define the GPIO pins for the RX pin of a GPS module."
tx_gpio, "GPS TX GPIO pin", "If your device does not have a fixed GPS chip, you can define the GPIO pins for the TX pin of a GPS module."
broadcast_smart_minimum_distance, "GPS smart position minimum distance", "The minimum distance in meters traveled (since the last send) before we can send a position to the mesh if smart broadcast is enabled."
broadcast_smart_minimum_interval_secs, "GPS smart position minimum interval", "The minimum number of seconds (since the last send) before we can send a position to the mesh if smart broadcast is enabled."
gps_en_gpio, "GPS enable GPIO", ""
gps_mode, "GPS mode", "Configures whether the GPS functionality is enabled, disabled, or not present on the node."

[config.power]
title, "Power"
is_power_saving, "Enable power saving mode", "Automatically shut down a device after this many seconds if power is lost."
on_battery_shutdown_after_secs, "Battery shutdown interval", ""
adc_multiplier_override, "ADC multiplier override", "Ratio of voltage divider for battery pin. Overrides the ADC_MULTIPLIER defined in the firmware device variant file for battery voltage calculation. See Meshtastic docs for more info.".
wait_bluetooth_secs, "Bluetooth", "How long to wait before turning off BLE when no bluetooth device is connected."
sds_secs, "", ""
ls_secs, "Light Sleep Interval", "ESP32 only. In light sleep the CPU is suspended, LoRa radio is on, BLE is off and GPS is on."
min_wake_secs, "Minimum Wake Interval", "While in light sleep when we receive packets on the LoRa radio we will wake and handle them and stay awake in no Bluetooth mode for this interval in seconds."
device_battery_ina_address, "Device Battery INA2xx Address", "If an INA-2XX device is auto-detected on one of the I2C buses at the specified address, it will be used as the authoritative source for reading device battery level voltage. Setting is ignored for devices with PMUs (e.g. T-beams)"
powermon_enables, "", ""

[config.network]
title, "Network"
Wi-Fi_enabled, "Wi-Fi Enabled", "Enables or Disables Wi-Fi."
Wi-Fi_ssid, "Wi-Fi SSID", "This is your Wi-Fi Network's SSID."
Wi-Fi_psk, "Wi-Fi PSK", "This is your Wi-Fi Network's password."
ntp_server, "NTP Server", "The network time server used if IP networking is available."
eth_enabled, "Ethernet Enabled", "Enables or Disables Ethernet on some hardware models."
address_mode, "IPv4 Networking Mode", "Set to DHCP by default. Change to STATIC to use a static IP address. Applies to both Ethernet and Wi-Fi."
ipv4_config.ip, "IPv4 Static Address", ""
ipv4_config.gateway, "IPv4 gateway", ""
ipv4_config.subnet, "IPv4 subnet", ""
ipv4_config.dns, "IPv4 DNS server", ""
rsyslog_server, "rsyslog server", ""

[config.display]
title, "Display"
screen_on_secs, "Screen On Duration", "How long the screen remains on in seconds after the user button is pressed or messages are received."
gps_format, "GPS Format", "The format used to display GPS coordinates on the device screen."
auto_screen_carousel_secs, "Auto Carousel Interval", "Automatically toggles to the next page on the screen like a carousel, based on the specified interval in seconds."
compass_north_top, "Always Point North", "If this is set, the compass heading on the screen outside of the circle will always point north. This feature is off by default and the top of display represents your heading direction, the North indicator will move around the circle."
flip_screen, "", ""
units, "Preferred Display Units", "Switch between METRIC (default) and IMPERIAL units."
oled, "OLED Definition", "The type of OLED Controller is auto-detected by default, but can be defined with this setting if the auto-detection fails. For the SH1107, we assume a square display with 128x128 Pixels like the GME128128-1."
displaymode, "Display Mode", "The display mode can be set to DEFAULT (default), TWOCOLOR, INVERTED or COLOR. The TWOCOLOR mode is intended for OLED displays with the first line of output being a different color than the rest of the display. The INVERTED mode will invert that bicolor area, resulting in a white background headline on monochrome displays."
heading_bold, "Heading Bold", "The heading can be hard to read when 'INVERTED' or 'TWOCOLOR' display mode is used. This setting will make the heading bold, so it is easier to read."
wake_on_tap_or_motion, "Wake on Tap or Motion", "This option enables the ability to wake the device screen when motion, such as a tap on the device, is detected via an attached accelerometer, or a capacitive touch button."
compass_orientation, "", ""

[config.lora]
title, "LoRa"
use_preset, "Use modem preset", "Presets are pre-defined modem settings (Bandwidth, Spread Factor, and Coding Rate) which influence both message speed and range. The vast majority of users use a preset."
modem_preset, "Preset", "The default preset will provide a strong mixture of speed and range, for most users."
bandwidth, "Bandwidth", "Width of the frequency \"band\" used around the calculated center frequency. Only used if modem preset is disabled."
spread_factor, "Spread factor", "Indicates the number of chirps per symbol. Only used if modem preset is disabled."
coding_rate, "Coding rate", "The proportion of each LoRa transmission that contains actual data - the rest is used for error correction."
frequency_offset, "Frequency offset", "This parameter is for advanced users with advanced test equipment.".
region, "Region", "Sets the region for your node. As long as this is not set, the node will display a message and not transmit any packets."
hop_limit, "Hop limit", "The maximum number of intermediate nodes between Femtofox and a node it is sending to. Does not impact received messages.\nn\033[31mWARNING:\033[0m Excessive hop limit increases congestion!\nnMust be between 0-7."
tx_enabled, "Enable TX", "Enables/disables the radio chip. Useful for hot-swapping antennas."
tx_power, "\033[31mWARNING!\033[0m\nSetting a 33db radio above 8db will permanently damage it.\nERP above 27db violates EU law.\nERP above 36db violates US (unlicensed) law.\n\n
If 0, will use the maximum continuous power legal in your region. Must be 0-30 (0 for automatic).", "TX power in dBm."
channel_num, "Frequency slot", "Determines the exact frequency the radio transmits and receives. If unset or set to 0, determined automatically by the primary channel name."
override_duty_cycle, "Override duty cycle", "Override the legal transmit time limit to allow unlimited transmit time. \033[31mMay have legal ramifications.\033[0m"
sx126x_rx_boosted_gain, "Enable SX126X RX boosted gain", "This is an option specific to the SX126x chip series which allows the chip to consume a small amount of additional power to increase RX (receive) sensitivity."
override_frequency, "Override frequency in MHz", "Overrides frequency slot. May have legal ramifications.".
pa_fan_disabled, "", ""
ignore_mqtt, "Ignore MQTT", "Ignores any messages it receives via LoRa that came via MQTT somewhere along the path towards the device."
config_ok_to_mqtt, "OK to MQTT", "Indicates that the user approves their packets to be uplinked to MQTT brokers."

[config.bluetooth]
title, "Bluetooth"
enabled, "Enabled", "Enables Bluetooth. Duh!"
mode, "Pairing Mode", "RANDOM_PIN generates a random PIN during runtime. FIXED_PIN uses the fixed PIN that should then be additionally specified. Finally, NO_PIN disables PIN authentication."
fixed_pin, "Fixed PIN", "If your pairing mode is set to FIXED_PIN, the default value is 123456. For all other pairing modes, this number is ignored. A custom integer (6 digits) can be set via the Bluetooth config options."

[config.security]
title, "Security"
public_key, "Public Key", "The public key of the device, shared with other nodes on the mesh to allow them to compute a shared secret key for secure communication. Generated automatically to match private key.\n\n\033[31mDon't change this if you don't know what you're doing.\033[0m"
private_key, "Private key", "The private key of the device, used to create a shared key with a remote device for secure communication.\n\n\033[31mThis key should be kept confidential.\nSetting an invalid key will lead to unexpected behaviors.\033[0m"
is_managed, "Enable managed mode", "Enabling Managed Mode blocks client applications from writing configurations to a radio(they may be read). Once enabled, radio configurations can only be changed via remote ode administration, this menu or CLI. \Z4This setting is not required for remote node administration.\033[0m\n\n\Before enabling Managed Mode, verify that the node can be controlled via Remote Admin or legacy Admin channel, and that all functions are working properly to \033[31mprevent being locked out.\033[0m"
serial_enabled, "Enable serial console", ""
debug_log_api_enabled, "Enable debug log", "Set this to true to continue outputting live debug logs over serial or Bluetooth when the API is active."
admin_channel_enabled, "Enable legacy admin channel", "If the node you Femtofox needs to administer or be administered by is running 2.4.x or earlier, you should set this to Enabled. Requires a secondary channel named \"admin\" be present on both nodes."
admin_key, "Admin keys", "The public key(s) authorized to send administrative messages to this node. Only messages signed by these keys will be accepted for administrative control. Up to 3."

[module.mqtt]
title, "MQTT"
enabled, "Enabled", "Enables the MQTT module."
address, "Server Address", "The server to use for MQTT. If not set, the default public server will be used."
username, "Username", "MQTT Server username to use (most useful for a custom MQTT server). If using a custom server, this will be honored even if empty. If using the default public server, this will only be honored if set, otherwise the device will use the default username."
password, "Password", "MQTT password to use (most useful for a custom MQTT server). If using a custom server, this will be honored even if empty. If using the default server, this will only be honored if set, otherwise the device will use the default password."
encryption_enabled, "Encryption Enabled", "Whether to send encrypted or unencrypted packets to the MQTT server. Unencrypted packets may be useful for external systems that want to consume meshtastic packets.\n\nNote: All messages are sent to the MQTT broker unencrypted if this option is not enabled, even when your uplink channels have encryption keys set."
json_enabled, "JSON Enabled", "Enable the sending / consumption of JSON packets on MQTT. These packets are not encrypted, but offer an easy way to integrate with systems that can read JSON. JSON is not supported on the nRF52 platform."
tls_enabled, "TLS Enabled", "If true, we attempt to establish a secure connection using TLS."
root, "Root Topic", "The root topic to use for MQTT messages. This is useful if you want to use a single MQTT server for multiple meshtastic networks and separate them via ACLs."
proxy_to_client_enabled, "Client Proxy Enabled", "If true, let the device use the client's (e.g. your phone's) network connection to connect to the MQTT server. If false, it uses the device's network connection which you have to enable via the network settings."
map_reporting_enabled, "Map Reporting Enabled", "Available from firmware version 2.3.2 on. If true, your node will periodically send an unencrypted map report to the MQTT server to be displayed by online maps that support this packet."
map_report_settings.publish_interval_secs, "Map Report Publish Interval", "How often we should publish the map report to the MQTT server in seconds. Defaults to 900 seconds (15 minutes)."
map_report_settings.position_precision, "Map Report Position Precision", "The precision to use for the position in the map report. Defaults to a maximum deviation of around 1459m."

[module.serial]
title, "Serial"
enabled, "Enabled", "Enables the module."
echo, "Echo", "If set, any packets you send will be echoed back to your device."
rxd, "Receive GPIO Pin", "Set the GPIO pin to the RXD pin you have set up"
txd, "Transmit GPIO Pin", "Set the GPIO pin to the TXD pin you have set up"
baud, "Baud Rate", "The serial baud rate"
timeout, "Timeout", "The amount of time to wait before we consider your packet as \"done\""
mode, "Mode", "See Meshtastic docs for more information."
override_console_serial_port, "Override Console Serial Port", "If set to true, this will allow Serial Module to control (set baud rate) and use the primary USB serial bus for output. This is only useful for NMEA and CalTopo modes and may behave strangely or not work at all in other modes. Setting TX/RX pins in the Serial Module config will cause this setting to be ignored."

[module.external_notification]
title, "External Notification"
enabled, "Enabled", "Enables the module."
output_ms, "Length", "Specifies how long in milliseconds you would like your GPIOs to be active. In case of the repeat option, this is the duration of every tone and pause."
output, "", ""
output_vibra, "", ""
output_buzzer, "", ""
active, "Active (general / LED only)", "Specifies whether the external circuit is active when the device's GPIO is low or high. If this is set true, the pin will be pulled active high, false means active low."
alert_message, "Alert when receiving a message, general", "Specifies if an alert should be triggered when receiving an incoming message."
alert_message_vibra, "Alert vibration on message", "Specifies if a vibration alert should be triggered when receiving an incoming message."
alert_message_buzzer, "Alert buzzer on message", "Specifies if an alert should be triggered when receiving an incoming message with an alert bell character."
alert_bell, "Alert when receiving a bell, general", "Specifies if an alert should be triggered when receiving an incoming bell with an alert bell character."
alert_bell_vibra, "Alert vibration on bell", "Specifies if a vibration alert should be triggered when receiving an incoming message with an alert bell character."
alert_bell_buzzer, "Alert buzzer on bell", "Specifies if an alert should be triggered when receiving an incoming message with an alert bell character."
use_pwm, "Use PWM for buzzer", ""
nag_timeout, "Repeat (Nag Timeout)", "Specifies if the alert should be repeated. If set to a value greater than zero, the alert will be repeated until the user button is pressed or 'value' number of seconds have past."
use_i2s_as_buzzer, "Use i2s as buzzer", ""

[module.store_forward]
title, "Store & Forward"
enabled, "Enabled", "Enables the module."
heartbeat, "Heartbeat", "The Store & Forward Server sends a periodic message onto the network. This allows connected devices to know that a server is in range and listening to received messages. A client like Android, iOS, or Web can (if supported) indicate to the user whether a Store & Forward Server is available."
records, "Records", "Set this to the maximum number of records the server will save. Best to leave this at the default (0) where the module will use 2/3 of your device's available PSRAM. This is about 11,000 records."
history_return_max, "History Return Max", "Sets the maximum number of messages to return to a client device when it requests the history."
history_return_window, "History Return Window", "Limits the time period (in minutes) a client device can request."
is_server, "Is server", "Set to true to configure your node with PSRAM as a Store & Forward Server for storing and forwarding messages. This is an alternative to setting the node as a ROUTER and only available since 2.4."

[module.range_test]
title, "Range Test"
enabled, "Enabled", "Enables the module."
sender, "Sender Interval", "How long to wait between sending sequential test packets. 0 is default which disables sending messages."
save, "Save CSV File", "If enabled, all received messages are saved to the device's flash memory in a file named rangetest.csv.\n\nTo access this file, first turn on the WiFi on your device and connect to your network. Once you can connect to your device, navigate to meshtastic.local/rangetest.csv (or your_device_ip/rangetest.csv) and the file will be downloaded automatically. This file will only be created after receiving initial messages.\n\nTo prevent filling up the storage, the device will abort writing if there is less than 50kb of space on the filesystem.\nLeave disabled when using the Android or Apple apps. Saves directly to the device's flash memory (without the need for a smartphone), and is only available on ESP32-based devices."

[module.telemetry]
title, "Telemetry"
device_update_interval, "Device Metrics Update Interval", "How often we should send Device Metrics over the mesh in seconds."
environment_update_interval, "Environment Metrics Update Interval", "How often we should send Environment(Sensor) Metrics over the mesh in seconds."
environment_measurement_enabled, "Environment Telemetry Enabled", "Enable the Environment Telemetry (Sensors)."
environment_screen_enabled, "Environment Screen Enabled", "Show the environment telemetry data on the device display."
environment_display_fahrenheit, "Display Fahrenheit", "The sensor is always read in Celsius, but the user can opt to display in Fahrenheit (on the device display only) using this setting."
air_quality_enabled, "Air Quality Enabled", "This option is used to enable/disable the sending of air quality metrics from an attached supported sensor over the mesh network."
air_quality_interval, "Air Quality Interval", "This option is used to configure the interval (in seconds) that should be used to send air quality metrics from an attached supported sensor over the mesh network in seconds."
power_measurement_enabled, "Power Metrics Enabled", "This option is used to enable/disable the sending of power telemetry as gathered by an attached supported voltage/current sensor. Note that this does not need to be enabled to monitor the voltage of the battery."
power_update_interval, "Power Metrics Interval", "This option is used to configure the interval (in seconds) that should be used to send power metrics from an attached supported sensor over the mesh network in seconds."
power_screen_enabled, "Power Screen Enabled", "Show the power telemetry data on the device display."

health_measurement_enabled, "Health Telemetry Interval", "This option is used to configure the interval (in seconds) that should be used to send health data from an attached supported sensor over the mesh network in seconds."
health_update_interval, "Health Telemetry Enabled", "This option is used to enable/disable the sending of health data from an attached supported sensor over the mesh network."
health_screen_enabled, "Health Screen Enabled", "Show the health telemetry data on the device display."

[module.canned_message]
title, "Canned Message"
rotary1_enabled, "Rotary Encoder Enabled", "Enable the default rotary encoder."
inputbroker_pin_a, "Input Broker Pin A", "GPIO Pin Value (1-39) For encoder port A."
inputbroker_pin_b, "Input Broker Pin B", "GPIO Pin Value (1-39) For encoder port B."
inputbroker_pin_press, "Input Broker Pin Press", "GPIO Pin Value (1-39) For encoder Press port."
inputbroker_event_cw, "Input Broker Event Clockwise", "Generate the rotary clockwise event."
inputbroker_event_ccw, "Input Broker Event Counter Clockwise", "Generate the rotary counter clockwise event."
inputbroker_event_press, "Input Broker Event Press", "Generate input event on Press of this kind."
updown1_enabled, "Up Down Encoder Enabled", "Enable the up / down encoder."
enabled, "Enabled", "Enables the module."
allow_input_source, "Input Source", "Input event sources accepted by the canned message module."
send_bell, "Send Bell", "Sends a bell character with each message."

[module.audio]
title, "Audio"
codec2_enabled, "Enabled", "Enables the module."
ptt_pin, "PTT GPIO", "The GPIO to use for the Push-To-Talk button. The default is GPIO 39 on the ESP32."
bitrate, "Audio Bitrate/Codec Mode", "The bitrate to use for audio."
i2s_ws, "I2S Word Select", "The GPIO to use for the WS signal in the I2S interface."
i2s_sd, "I2S Data IN", "The GPIO to use for the SD signal in the I2S interface."
i2s_din, "I2S Data OUT", "The GPIO to use for the DIN signal in the I2S interface."
i2s_sck, "I2S Clock", "The GPIO to use for the SCK signal in the I2S interface."

[module.remote_hardware]
title, "Remote Hardware"
enabled, "Enabled", "Enables the module."
allow_undefined_pin_access, "Allow undefined pin access", ""

[module.neighbor_info]
title, "Neighbor Info"
enabled, "Enabled", "Enables the module."
update_interval, "Update Interval", "How often the neighbor info is sent to the mesh. This cannot be set lower than 4 hours (14400 seconds). The default is 6 hours (21600 seconds)."
transmit_over_lora, "Transmit Over LoRa", "Available from firmware 2.5.13 and higher. By default, neighbor info will only be sent to MQTT and a connected app. If enabled, the neighbor info will be sent on the primary channel over LoRa. Only available when the primary channel is not the public channel with default key and name."

[module.ambient_lighting]
title, "Ambient Lighting"
led_state, "LED State", "Sets the LED to on or Off.

"
current, "Current", "Sets the current for the LED output. Default is 10."
red, "Red", "Sets the red LED level. Values are 0-255."
green, "Green", "Sets the green LED level. Values are 0-255."
blue, "Blue", "Sets the blue LED level. Values are 0-255."
  
[module.detection_sensor]
title, "Detection Sensor"
enabled, "Enabled", "Enables the module."
minimum_broadcast_secs, "Minimum Broadcast Interval", "The interval in seconds of how often we can send a message to the mesh when a state change is detected."
state_broadcast_secs, "State Broadcast Interval", "The interval in seconds of how often we should send a message to the mesh with the current state regardless of changes, When set to 0, only state changes will be broadcasted, Works as a sort of status heartbeat for peace of mind."
send_bell, "Send Bell", "Send ASCII bell with alert message. Useful for triggering ext. notification on bell name."
name, "Friendly Name", "Used to format the message sent to mesh. Example: A name "Motion" would result in a message "Motion detected". Maximum length of 20 characters."
monitor_pin, "Monitor Pin", "The GPIO pin to monitor for state changes."
detection_trigger_type, "Detection Triggered High", "Whether or not the GPIO pin state detection is triggered on HIGH (1), otherwise LOW (0)."
use_pullup, "Use Pull-up", "Whether or not use INPUT_PULLUP mode for GPIO pin. Only applicable if the board uses pull-up resistors on the pin."

[module.paxcounter]
title, "Paxcounter"
enabled, "Enabled", "Enables the module."
paxcounter_update_interval, "Update Interval", "The interval in seconds of how often we can send a message to the mesh when a state change is detected."
Wi-Fi_threshold, "", ""
ble_threshold, "", ""